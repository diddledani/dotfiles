#!/bin/bash

# Because Git submodule commands cannot operate without a work tree, they must
# be run from within $HOME (assuming this is the root of your dotfiles)
cd "$HOME"

echo "Init submodules"
yadm submodule update --recursive --init

system_type=$(uname -s)

if [ -n "$WSL_DISTRO_NAME" ] && [ ! -f /etc/profile.d/00-wsl2-systemd.sh ]; then
    install_script="$(mktemp --suffix=.ps1)"
    if [ $(/usr/bin/wslsys -B | awk '{print $2}') -gt 21286 ]; then
        curl -o "$install_script" https://raw.githubusercontent.com/diddledani/one-script-wsl2-systemd/build-21286%2B/install.ps1
        powershell.exe -NonInteractive -NoProfile -ExecutionPolicy Bypass -File "$install_script" -distro "$WSL_DISTRO_NAME"
    else
        curl -o "$install_script" https://raw.githubusercontent.com/diddledani/one-script-wsl2-systemd/master/install.ps1
        powershell.exe -NonInteractive -NoProfile -ExecutionPolicy Bypass -File "$install_script" -distro "$WSL_DISTRO_NAME"
    fi
    rm "$install_script"
    exec /bin/sh /etc/profile.d/00-wsl2-systemd.sh "$(realpath "${BASH_SOURCE[0]}")"
fi

if [ "$system_type" = "Darwin" ]; then
  # install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  echo "Updating homebrew bundle"
  brew bundle --global
fi

if [ "$system_type" = "Linux" ]; then
  sudo apt-get install --no-install-recommends -yyq \
    build-essential \
    cmake \
    curl \
    direnv \
    fonts-noto-color-emoji \
    mono-complete \
    php-cli \
    python3-dev \
    scdaemon \
    socat \
    vim-gtk3 \
    zsh \
  ;

  sudo snap install --classic --channel=14/stable node
  sudo snap install --classic go
  sudo snap install --classic hub
  sudo snap install --classic powershell

  sudo snap install --channel=extended hugo

  if [ ! -d "$HOME/bin" ]; then
    mkdir -p "$HOME/bin"
  fi

fi

env RUNZSH="no" sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
if [ -f ".zshrc.pre-oh-my-zsh" ]; then
  mv ".zshrc.pre-oh-my-zsh" ".zshrc"
fi

pushd "$HOME/bin/emsdk"
  ./emsdk update-tags
  ./emsdk install latest
  ./emsdk activate latest
popd

pushd "$HOME/.rbenv"
  ./src/configure && make -C src
popd

composer_sigfile="$(mktemp)"
curl -L -s -o "$composer_sigfile" "https://composer.github.io/installer.sig"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"

EXPECTED_SIGNATURE="$(cat "$composer_sigfile")"
ACTUAL_SIGNATURE="$(php -r "echo hash_file('SHA384', 'composer-setup.php');")"

if [ "$EXPECTED_SIGNATURE" = "$ACTUAL_SIGNATURE" ]; then
    php composer-setup.php --quiet --install-dir="$HOME/bin" --filename=composer
fi
rm composer-setup.php

curl -o "$HOME/bin/wp" https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
chmod +x "$HOME/bin/wp"

vim +BundleInstall +qall

pushd "$HOME/.vim/bundle/YouCompleteMe"
python3 install.py --all
popd

echo "Importing GPG key"
gpg --keyserver keys.openpgp.org --recv-keys 4C9CBFAD0069D6799660BCD540C2D9580349ED21

echo "Decrypting private files"
yadm decrypt

if [ -n "$WSL_DISTRO_NAME" ]; then
  mkdir -p "$(wslpath "$(wslvar USERPROFILE)")/.ssh"
  cp "$HOME/.ssh/id_rsa" "$(wslpath "$(wslvar USERPROFILE)")/.ssh/"
fi

echo "Updating the yadm repo origin URL"
yadm remote set-url origin "git@github.com:diddledani/dotfiles.git"

